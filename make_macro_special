# special

make -O -j15 V=1

popd

# Work around libstdc++'s use of weak symbols to libpthread in static
# mode: libpthread doesn't get pulled in and therefore we get crashes
# due to the calls being resolved to address 0x0.
# We rebuild the .a without weak symbols.
# See:
#  https://sourceware.org/bugzilla/show_bug.cgi?id=5784
#  https://gcc.gnu.org/bugzilla/show_bug.cgi?id=78017
#  (and more)
for dir in ../gcc-build/x86_64-generic-linux/{,32}; do
    for lib in libstdc++-v3/libsupc++ libstdc++-v3/src; do
        pushd $dir/$lib
        # Save any shared libraries
        mv .libs saved.libs || :
        rename lib savedlib lib*.so.* || :

        make clean
        make -O -j14 CPPFLAGS="-D_GLIBCXX_GTHREAD_USE_WEAK=0" LIBGCC2_DEBUG_CFLAGS="-g3 -DGTHREAD_USE_WEAK=0 -fvisibility-inlines-hidden -fno-lto -g3 -fPIC -fno-PIE -fno-pie -Wl,--no-pie -O3 -mno-vzeroupper -march=native -mtune=native -mavx -mavx2 -msse2avx -Wall -Wl,--as-needed -Wl,--build-id=sha1 -Wl,-O2 -Wl,-z,now,-z,relro,-z,max-page-size=0x1000 -mprefer-vector-width=256 -falign-functions=32 -fasynchronous-unwind-tables -funwind-tables -fexceptions -floop-nest-optimize -floop-block -fno-semantic-interposition -Wl,-Bsymbolic-functions -fno-plt -fno-stack-protector -ftree-loop-distribute-patterns -ftree-loop-vectorize -ftree-slp-vectorize -ftree-vectorize -fuse-ld=bfd -fuse-linker-plugin -malign-data=cacheline -flive-range-shrinkage -Wp,-D_REENTRANT -pipe -ffat-lto-objects -pthread -Wl,--build-id=sha1 -fno-reorder-blocks-and-partition -Wl,--emit-relocs -Wno-inline"

        # Restore the saved shared libraries (if any)
        rename savedlib lib savedlib* || :
        if [ -d saved.libs ]; then
            mv saved.libs/*.so.* .libs || :
        fi

        # Update timestamps so make install won't recreate
        find -name '*.so*' | xargs -rt touch -r `find -name '*.a' | head -1`
        popd
    done
done
