%define gccpath gcc-12.1.0
%define gcc_target x86_64-generic-linux

pushd ../gcc-build
%make_install

if [ -d  %{buildroot}/usr/lib32/pkgconfig ]
then
    pushd %{buildroot}/usr/lib32/pkgconfig
    for i in *.pc ; do ln -s $i 32$i ; done
    popd
fi
if [ -d %{buildroot}/usr/share/pkgconfig ]
then
    pushd %{buildroot}/usr/share/pkgconfig
    for i in *.pc ; do ln -s $i 32$i ; done
    popd
fi

cd -

cd %{buildroot}/usr/bin
if [ -e %{gcc_target}-g77 ]; then
    ln -sf %{gcc_target}-g77 g77 || true
    ln -sf g77 f77 || true
fi
if [ -e x86_64-generic-linux-gfortran ]; then
    ln -sf %{gcc_target}-gfortran gfortran || true
    ln -sf gfortran f95 || true
fi
ln -sf %{gcc_target}-g++ g++
ln -sf %{gcc_target}-gcc gcc
#ln -sf %{gcc_target}-cpp cpp
install -d %{buildroot}/usr/lib
ln -sf ../bin/cpp %{buildroot}/usr/lib/cpp
ln -sf g++ c++
ln -sf gcc cc
cd -

# This conflicts with golang, stash away
# We use gccgo to build golang
mkdir -p %{buildroot}/usr/libexec/gccgo/bin
mv %{buildroot}/usr/bin/go %{buildroot}/usr/libexec/gccgo/bin
mv %{buildroot}/usr/bin/gofmt %{buildroot}/usr/libexec/gccgo/bin

find %{buildroot}/usr/ -name libiberty.a | xargs rm -f
find %{buildroot}/usr/ -name libiberty.h | xargs rm -f
chmod 0755 %{buildroot}*/usr/lib64/libgcc_s.so.1
chmod 0755 %{buildroot}*/usr/lib32/libgcc_s.so.1

chmod a+x %{buildroot}*/usr/bin
chmod a+x %{buildroot}*/usr/lib64
find %{buildroot}*/usr/lib64 %{buildroot}/usr/lib*/gcc -name '*.so*' -print0 | xargs -r0 chmod -f 755
find %{buildroot}*/usr/lib64 %{buildroot}/usr/lib*/gcc -name '*.o' -print0 | xargs -r0 chmod -f 644


# This is only for gdb
mkdir -p %{buildroot}//usr/share/gdb/auto-load//usr/lib64
mkdir -p %{buildroot}//usr/share/gdb/auto-load//usr/lib32
mv %{buildroot}//usr/lib64/libstdc++.so.*-gdb.py %{buildroot}//usr/share/gdb/auto-load//usr/lib64/.
mv %{buildroot}//usr/lib32/libstdc++.so.*-gdb.py %{buildroot}//usr/share/gdb/auto-load//usr/lib32/.

# merge the two C++ include trees (needed for Clang)
pushd %{buildroot}/usr/include/c++/*/x86_64-generic-linux
find -type f \! -path ./32/\* | while read f; do
    cmp -s $f 32/$f && continue
    (
        echo '#ifdef __LP64__'
        cat $f
        echo '#else'
        cat 32/$f
        echo '#endif'
    ) > rpm-tmp-hdr
    mv rpm-tmp-hdr $f
done
for f in ./32/*; do
  rm -rf $f
  ln -s ../$(basename $f) $f
done
popd

# Also clang compat
(cd %{buildroot}/usr/lib64 && ln -s -t . gcc/x86_64-generic-linux/*/*.[ao])
(cd %{buildroot}/usr/lib32 && ln -s -t . ../lib64/gcc/x86_64-generic-linux/*/32/*.[ao])

# %find_lang cpplib cpp.lang
# %find_lang gcc tmp.lang
# %find_lang libstdc++ cxx.lang
# cat *.lang > gcc.lang
